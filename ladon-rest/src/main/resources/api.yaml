swagger: '2.0'
info:
  contact:
    email: team@mind-consulting.de
  description: >-
    Some example requests using plain HTTP. For more information have a look at
    [https://ladon.org](https://ladon.org)
  title: Ladon HTTP API
  version: 2.2.1
host: 'localhost:8080'
basePath: '/ladon/api/rest/v1'
schemes:
  - https
paths:
  '/content/buckets/{bucket}/documents/{key}':
    delete:
      produces:
        - application/json
      operationId: deleteDocument
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
        - in: path
          name: key
          required: true
          type: string
        - in: query
          name: version
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ResponseSuccess'
      tags:
        - Documents
      summary: delete the selected document
    get:
      operationId: getDocument
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
        - in: path
          name: key
          required: true
          type: string
        - in: query
          name: version
          type: string
      responses:
        default:
          description: ''
      tags:
        - Documents
      summary: get the selected document
    put:
      operationId: putDocument
      produces:
        - application/json
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
        - in: path
          name: key
          required: true
          type: string
        - in: query
          name: version
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Document'
      tags:
        - Documents
      summary: add a new document
  /meta/buckets/:
    get:
      operationId: listBuckets
      produces:
        - application/json
      parameters:
        - format: int64
          in: query
          name: limit
          type: integer
        - format: int64
          in: query
          name: page
          type: integer
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Bucket'
            type: array
      tags:
        - Buckets
      summary: list all buckets
  '/meta/buckets/{bucket}':
    delete:
      operationId: deleteBucket
      produces:
        - application/json
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/ResponseSuccess'
      tags:
        - Buckets
      summary: delete the selected bucket
    get:
      operationId: getBucket
      produces:
        - application/json
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Bucket'
      tags:
        - Buckets
      summary: get information about a bucket
    put:
      operationId: createBucket
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
        - description: Optional description in *Markdown*
          in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Bucket'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Bucket'
      tags:
        - Buckets
      summary: create or change a bucket
  '/meta/buckets/{bucket}/documents/':
    get:
      operationId: listDocuments
      produces:
        - application/json
      parameters:
        - format: int64
          in: query
          name: limit
          type: integer
          default: 1000
        - format: int64
          in: query
          name: page
          type: integer
          default: 1
        - in: path
          name: bucket
          required: true
          type: string
        - in: query
          name: prefix
          type: string
        - in: query
          name: orderby
          type: string
          enum: [name, created]
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Document'
            type: array
      tags:
        - Documents
      summary: list all documents of the bucket
  '/meta/buckets/{bucket}/documents/{key}':
    get:
      operationId: getDocumentMeta
      produces:
        - application/json
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
        - in: path
          name: key
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Document'
      tags:
        - Documents
      summary: get the selected document
    put:
      operationId: createDocumentMeta
      produces:
        - application/json
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
        - in: path
          name: key
          required: true
          type: string
        - in: query
          name: version
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Document'
      tags:
        - Documents
      summary: put a new document
  '/meta/buckets/{bucket}/documents/{key}/versions':
    get:
      operationId: listDocumentMetaVersions
      produces:
        - application/json
      parameters:
        - in: path
          name: bucket
          required: true
          type: string
        - in: path
          name: key
          required: true
          type: string
      responses:
        '200':
          description: ''
          schema:
            items:
              $ref: '#/definitions/Document'
            type: array
      tags:
        - Documents
      summary: list all versions of this document

definitions:
  Bucket:
    properties:
      created:
        type: string
      name:
        type: string
      owner:
        type: string
      versioned:
        type: boolean
    required:
      - name
      - versioned
    type: object
  Document:
    properties:
      content-type:
        type: string
      created:
        type: string
      description:
        type: string
      key:
        type: string
      latest:
        type: boolean
      metadata:
        $ref: '#/definitions/Metadata'
      owner:
        type: string
      size:
        format: int64
        type: integer
      version:
        type: string
    required:
      - created
      - key
      - owner
    type: object
  Metadata:
    additionalProperties:
      type: string
    type: object
  ResponseSuccess:
    properties:
      success:
        type: boolean
    required:
      - success
    type: object
securityDefinitions:
  basicAuth:
    type: basic
security:
  - basicAuth: []
tags:
  - description: api for managing buckets
    name: Buckets
  - description: api for managing documents
    name: Documents
externalDocs:
  description: Find out more about Ladon
  url: 'http://ladon.org'
x-components: {}
